// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServerCreatePkgPasteServerRequestBody ServerCreatePkgPasteServerRequestBody
// Example: {"kernelRelease":"kernel release","kernelVersion":"kernel version","osFamily":"20","osVersion":"20","pkgPasteText":"","serverName":"Server Name"}
//
// swagger:model ServerCreatePkgPasteServerRequestBody
type ServerCreatePkgPasteServerRequestBody struct {

	// Kernel Release
	// Example: kernel release
	// Required: true
	KernelRelease *string `json:"kernelRelease"`

	// Kernel Version
	// Example: kernel version
	KernelVersion string `json:"kernelVersion,omitempty"`

	// Server OS Family
	// Example: 20
	// Required: true
	OsFamily *string `json:"osFamily"`

	// Server OS Version
	// Example: 20
	// Required: true
	OsVersion *string `json:"osVersion"`

	// pkg paste text
	// Required: true
	PkgPasteText *string `json:"pkgPasteText"`

	// Server Name
	// Example: Server Name
	// Required: true
	ServerName *string `json:"serverName"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *ServerCreatePkgPasteServerRequestBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// Kernel Release
		// Example: kernel release
		// Required: true
		KernelRelease *string `json:"kernelRelease"`

		// Kernel Version
		// Example: kernel version
		KernelVersion string `json:"kernelVersion,omitempty"`

		// Server OS Family
		// Example: 20
		// Required: true
		OsFamily *string `json:"osFamily"`

		// Server OS Version
		// Example: 20
		// Required: true
		OsVersion *string `json:"osVersion"`

		// pkg paste text
		// Required: true
		PkgPasteText *string `json:"pkgPasteText"`

		// Server Name
		// Example: Server Name
		// Required: true
		ServerName *string `json:"serverName"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.KernelRelease = props.KernelRelease
	m.KernelVersion = props.KernelVersion
	m.OsFamily = props.OsFamily
	m.OsVersion = props.OsVersion
	m.PkgPasteText = props.PkgPasteText
	m.ServerName = props.ServerName
	return nil
}

// Validate validates this server create pkg paste server request body
func (m *ServerCreatePkgPasteServerRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKernelRelease(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOsFamily(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOsVersion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePkgPasteText(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServerName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServerCreatePkgPasteServerRequestBody) validateKernelRelease(formats strfmt.Registry) error {

	if err := validate.Required("kernelRelease", "body", m.KernelRelease); err != nil {
		return err
	}

	return nil
}

func (m *ServerCreatePkgPasteServerRequestBody) validateOsFamily(formats strfmt.Registry) error {

	if err := validate.Required("osFamily", "body", m.OsFamily); err != nil {
		return err
	}

	return nil
}

func (m *ServerCreatePkgPasteServerRequestBody) validateOsVersion(formats strfmt.Registry) error {

	if err := validate.Required("osVersion", "body", m.OsVersion); err != nil {
		return err
	}

	return nil
}

func (m *ServerCreatePkgPasteServerRequestBody) validatePkgPasteText(formats strfmt.Registry) error {

	if err := validate.Required("pkgPasteText", "body", m.PkgPasteText); err != nil {
		return err
	}

	return nil
}

func (m *ServerCreatePkgPasteServerRequestBody) validateServerName(formats strfmt.Registry) error {

	if err := validate.Required("serverName", "body", m.ServerName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this server create pkg paste server request body based on context it is used
func (m *ServerCreatePkgPasteServerRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServerCreatePkgPasteServerRequestBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServerCreatePkgPasteServerRequestBody) UnmarshalBinary(b []byte) error {
	var res ServerCreatePkgPasteServerRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
