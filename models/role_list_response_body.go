// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RoleListResponseBody RoleListResponseBody
// Example: {"allTaskCount":10,"createdAt":"2018-07-14T08:13:28Z","id":1,"isDefault":true,"name":"server-role-name","newTaskCount":10,"secMetric":{"ar":"","cr":"","createdAt":"2018-07-14T08:13:28Z","ir":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},"serverCount":10,"updatedAt":"2018-07-14T08:13:28Z"}
//
// swagger:model RoleListResponseBody
type RoleListResponseBody struct {

	// AllTaskCount of server role
	// Example: 10
	AllTaskCount int64 `json:"allTaskCount,omitempty"`

	// created time of server role
	// Example: 2018-07-14T08:13:28Z
	// Required: true
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"createdAt"`

	// ID of server role
	// Example: 1
	// Required: true
	ID *int64 `json:"id"`

	// isDefault of server role
	// Example: true
	// Required: true
	IsDefault *bool `json:"isDefault"`

	// Name of server role
	// Example: server-role-name
	// Required: true
	Name *string `json:"name"`

	// NewTaskCount of server role
	// Example: 10
	NewTaskCount int64 `json:"newTaskCount,omitempty"`

	// sec metric
	SecMetric *SecMetricResponseBody `json:"secMetric,omitempty"`

	// Server Count of server role
	// Example: 10
	ServerCount int64 `json:"serverCount,omitempty"`

	// updated time of server role
	// Example: 2018-07-14T08:13:28Z
	// Required: true
	// Format: date-time
	UpdatedAt *strfmt.DateTime `json:"updatedAt"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *RoleListResponseBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// AllTaskCount of server role
		// Example: 10
		AllTaskCount int64 `json:"allTaskCount,omitempty"`

		// created time of server role
		// Example: 2018-07-14T08:13:28Z
		// Required: true
		// Format: date-time
		CreatedAt *strfmt.DateTime `json:"createdAt"`

		// ID of server role
		// Example: 1
		// Required: true
		ID *int64 `json:"id"`

		// isDefault of server role
		// Example: true
		// Required: true
		IsDefault *bool `json:"isDefault"`

		// Name of server role
		// Example: server-role-name
		// Required: true
		Name *string `json:"name"`

		// NewTaskCount of server role
		// Example: 10
		NewTaskCount int64 `json:"newTaskCount,omitempty"`

		// sec metric
		SecMetric *SecMetricResponseBody `json:"secMetric,omitempty"`

		// Server Count of server role
		// Example: 10
		ServerCount int64 `json:"serverCount,omitempty"`

		// updated time of server role
		// Example: 2018-07-14T08:13:28Z
		// Required: true
		// Format: date-time
		UpdatedAt *strfmt.DateTime `json:"updatedAt"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.AllTaskCount = props.AllTaskCount
	m.CreatedAt = props.CreatedAt
	m.ID = props.ID
	m.IsDefault = props.IsDefault
	m.Name = props.Name
	m.NewTaskCount = props.NewTaskCount
	m.SecMetric = props.SecMetric
	m.ServerCount = props.ServerCount
	m.UpdatedAt = props.UpdatedAt
	return nil
}

// Validate validates this role list response body
func (m *RoleListResponseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsDefault(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecMetric(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RoleListResponseBody) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("createdAt", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("createdAt", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *RoleListResponseBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *RoleListResponseBody) validateIsDefault(formats strfmt.Registry) error {

	if err := validate.Required("isDefault", "body", m.IsDefault); err != nil {
		return err
	}

	return nil
}

func (m *RoleListResponseBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *RoleListResponseBody) validateSecMetric(formats strfmt.Registry) error {
	if swag.IsZero(m.SecMetric) { // not required
		return nil
	}

	if m.SecMetric != nil {
		if err := m.SecMetric.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("secMetric")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("secMetric")
			}
			return err
		}
	}

	return nil
}

func (m *RoleListResponseBody) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updatedAt", "body", m.UpdatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("updatedAt", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this role list response body based on the context it is used
func (m *RoleListResponseBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSecMetric(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RoleListResponseBody) contextValidateSecMetric(ctx context.Context, formats strfmt.Registry) error {

	if m.SecMetric != nil {
		if err := m.SecMetric.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("secMetric")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("secMetric")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RoleListResponseBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RoleListResponseBody) UnmarshalBinary(b []byte) error {
	var res RoleListResponseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
