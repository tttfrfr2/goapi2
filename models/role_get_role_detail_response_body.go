// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RoleGetRoleDetailResponseBody RoleGetRoleDetailResponseBody
// Example: {"allTaskCount":10,"createdAt":"2018-07-14T08:13:28Z","envMetricV2s":[{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"},{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"}],"envMetricV3s":[{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"}],"id":1,"isDefault":true,"name":"server-role-name","newTaskCount":10,"secMetric":{"ar":"","cr":"","createdAt":"2018-07-14T08:13:28Z","ir":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},"servers":[{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"}],"updatedAt":"2018-07-14T08:13:28Z"}
//
// swagger:model RoleGetRoleDetailResponseBody
type RoleGetRoleDetailResponseBody struct {

	// AllTaskCount of server role
	// Example: 10
	AllTaskCount int64 `json:"allTaskCount,omitempty"`

	// created time of server role
	// Example: 2018-07-14T08:13:28Z
	// Required: true
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"createdAt"`

	// envMetricV2s of server role
	// Example: [{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"},{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"},{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"}]
	EnvMetricV2s []*EnvMetricV2ResponseBody `json:"envMetricV2s"`

	// envMetricV3s of server role
	// Example: [{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"}]
	EnvMetricV3s []*EnvMetricV3ResponseBody `json:"envMetricV3s"`

	// ID of server role
	// Example: 1
	// Required: true
	ID *int64 `json:"id"`

	// isDefault of server role
	// Example: true
	IsDefault bool `json:"isDefault,omitempty"`

	// Name of server role
	// Example: server-role-name
	// Required: true
	Name *string `json:"name"`

	// NewTaskCount of server role
	// Example: 10
	NewTaskCount int64 `json:"newTaskCount,omitempty"`

	// sec metric
	SecMetric *SecMetricResponseBody `json:"secMetric,omitempty"`

	// Servers of server role
	// Example: [{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"}]
	Servers []*ServerChildResponseBody `json:"servers"`

	// updated time of server role
	// Example: 2018-07-14T08:13:28Z
	// Required: true
	// Format: date-time
	UpdatedAt *strfmt.DateTime `json:"updatedAt"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *RoleGetRoleDetailResponseBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// AllTaskCount of server role
		// Example: 10
		AllTaskCount int64 `json:"allTaskCount,omitempty"`

		// created time of server role
		// Example: 2018-07-14T08:13:28Z
		// Required: true
		// Format: date-time
		CreatedAt *strfmt.DateTime `json:"createdAt"`

		// envMetricV2s of server role
		// Example: [{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"},{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"},{"cdp":"","createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","roleID":1,"roleName":"roleName","td":"","updatedAt":"2018-07-14T08:13:28Z"}]
		EnvMetricV2s []*EnvMetricV2ResponseBody `json:"envMetricV2s"`

		// envMetricV3s of server role
		// Example: [{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","cveID":"CVE-2018-1234","ma":"","mac":"","mav":"","mc":"","mpr":"","ms":"","mui":"","roleID":1,"roleName":"roleName","updatedAt":"2018-07-14T08:13:28Z"}]
		EnvMetricV3s []*EnvMetricV3ResponseBody `json:"envMetricV3s"`

		// ID of server role
		// Example: 1
		// Required: true
		ID *int64 `json:"id"`

		// isDefault of server role
		// Example: true
		IsDefault bool `json:"isDefault,omitempty"`

		// Name of server role
		// Example: server-role-name
		// Required: true
		Name *string `json:"name"`

		// NewTaskCount of server role
		// Example: 10
		NewTaskCount int64 `json:"newTaskCount,omitempty"`

		// sec metric
		SecMetric *SecMetricResponseBody `json:"secMetric,omitempty"`

		// Servers of server role
		// Example: [{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"},{"createdAt":"2018-07-14T08:13:28Z","defaultUserId":1,"defaultUserName":"vuls user","hostUuid":"141df30a-ecd0-39f4-a8f4-1ef216a4b5f2","id":1,"lastScannedAt":"2018-07-14T08:13:28Z","lastUploadedAt":"2018-07-14T08:13:28Z","needKernelRestart":true,"osFamily":"centos","osVersion":"6","serverName":"server01","serverUuid":"abcdef12-ecd0-39f4-a8f4-1ef216a4b5f2","serverroleId":1,"serverroleName":"server_role01","tags":["Fugit repellendus illo.","Aperiam ipsa voluptate autem unde.","Fuga accusamus aut."],"updatedAt":"2018-07-14T08:13:28Z"}]
		Servers []*ServerChildResponseBody `json:"servers"`

		// updated time of server role
		// Example: 2018-07-14T08:13:28Z
		// Required: true
		// Format: date-time
		UpdatedAt *strfmt.DateTime `json:"updatedAt"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.AllTaskCount = props.AllTaskCount
	m.CreatedAt = props.CreatedAt
	m.EnvMetricV2s = props.EnvMetricV2s
	m.EnvMetricV3s = props.EnvMetricV3s
	m.ID = props.ID
	m.IsDefault = props.IsDefault
	m.Name = props.Name
	m.NewTaskCount = props.NewTaskCount
	m.SecMetric = props.SecMetric
	m.Servers = props.Servers
	m.UpdatedAt = props.UpdatedAt
	return nil
}

// Validate validates this role get role detail response body
func (m *RoleGetRoleDetailResponseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnvMetricV2s(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnvMetricV3s(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecMetric(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("createdAt", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("createdAt", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateEnvMetricV2s(formats strfmt.Registry) error {
	if swag.IsZero(m.EnvMetricV2s) { // not required
		return nil
	}

	for i := 0; i < len(m.EnvMetricV2s); i++ {
		if swag.IsZero(m.EnvMetricV2s[i]) { // not required
			continue
		}

		if m.EnvMetricV2s[i] != nil {
			if err := m.EnvMetricV2s[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("envMetricV2s" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("envMetricV2s" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateEnvMetricV3s(formats strfmt.Registry) error {
	if swag.IsZero(m.EnvMetricV3s) { // not required
		return nil
	}

	for i := 0; i < len(m.EnvMetricV3s); i++ {
		if swag.IsZero(m.EnvMetricV3s[i]) { // not required
			continue
		}

		if m.EnvMetricV3s[i] != nil {
			if err := m.EnvMetricV3s[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("envMetricV3s" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("envMetricV3s" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateSecMetric(formats strfmt.Registry) error {
	if swag.IsZero(m.SecMetric) { // not required
		return nil
	}

	if m.SecMetric != nil {
		if err := m.SecMetric.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("secMetric")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("secMetric")
			}
			return err
		}
	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateServers(formats strfmt.Registry) error {
	if swag.IsZero(m.Servers) { // not required
		return nil
	}

	for i := 0; i < len(m.Servers); i++ {
		if swag.IsZero(m.Servers[i]) { // not required
			continue
		}

		if m.Servers[i] != nil {
			if err := m.Servers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("servers" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("servers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updatedAt", "body", m.UpdatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("updatedAt", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this role get role detail response body based on the context it is used
func (m *RoleGetRoleDetailResponseBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateEnvMetricV2s(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateEnvMetricV3s(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSecMetric(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateServers(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RoleGetRoleDetailResponseBody) contextValidateEnvMetricV2s(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.EnvMetricV2s); i++ {

		if m.EnvMetricV2s[i] != nil {
			if err := m.EnvMetricV2s[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("envMetricV2s" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("envMetricV2s" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) contextValidateEnvMetricV3s(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.EnvMetricV3s); i++ {

		if m.EnvMetricV3s[i] != nil {
			if err := m.EnvMetricV3s[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("envMetricV3s" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("envMetricV3s" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) contextValidateSecMetric(ctx context.Context, formats strfmt.Registry) error {

	if m.SecMetric != nil {
		if err := m.SecMetric.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("secMetric")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("secMetric")
			}
			return err
		}
	}

	return nil
}

func (m *RoleGetRoleDetailResponseBody) contextValidateServers(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Servers); i++ {

		if m.Servers[i] != nil {
			if err := m.Servers[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("servers" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("servers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RoleGetRoleDetailResponseBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RoleGetRoleDetailResponseBody) UnmarshalBinary(b []byte) error {
	var res RoleGetRoleDetailResponseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
