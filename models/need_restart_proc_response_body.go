// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NeedRestartProcResponseBody NeedRestartProcResponseBody
// Example: {"initSystem":"initSystem","path":"path","pid":"12","serviceName":"serviceName"}
//
// swagger:model NeedRestartProcResponseBody
type NeedRestartProcResponseBody struct {

	// InitSystem of NeedRestartProc
	// Example: initSystem
	// Required: true
	InitSystem *string `json:"initSystem"`

	// Path of NeedRestartProc
	// Example: path
	// Required: true
	Path *string `json:"path"`

	// PID
	// Example: 12
	// Required: true
	Pid *string `json:"pid"`

	// ServiceName of NeedRestartProc
	// Example: serviceName
	// Required: true
	ServiceName *string `json:"serviceName"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *NeedRestartProcResponseBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// InitSystem of NeedRestartProc
		// Example: initSystem
		// Required: true
		InitSystem *string `json:"initSystem"`

		// Path of NeedRestartProc
		// Example: path
		// Required: true
		Path *string `json:"path"`

		// PID
		// Example: 12
		// Required: true
		Pid *string `json:"pid"`

		// ServiceName of NeedRestartProc
		// Example: serviceName
		// Required: true
		ServiceName *string `json:"serviceName"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.InitSystem = props.InitSystem
	m.Path = props.Path
	m.Pid = props.Pid
	m.ServiceName = props.ServiceName
	return nil
}

// Validate validates this need restart proc response body
func (m *NeedRestartProcResponseBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInitSystem(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePath(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NeedRestartProcResponseBody) validateInitSystem(formats strfmt.Registry) error {

	if err := validate.Required("initSystem", "body", m.InitSystem); err != nil {
		return err
	}

	return nil
}

func (m *NeedRestartProcResponseBody) validatePath(formats strfmt.Registry) error {

	if err := validate.Required("path", "body", m.Path); err != nil {
		return err
	}

	return nil
}

func (m *NeedRestartProcResponseBody) validatePid(formats strfmt.Registry) error {

	if err := validate.Required("pid", "body", m.Pid); err != nil {
		return err
	}

	return nil
}

func (m *NeedRestartProcResponseBody) validateServiceName(formats strfmt.Registry) error {

	if err := validate.Required("serviceName", "body", m.ServiceName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this need restart proc response body based on context it is used
func (m *NeedRestartProcResponseBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NeedRestartProcResponseBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NeedRestartProcResponseBody) UnmarshalBinary(b []byte) error {
	var res NeedRestartProcResponseBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
