// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServerUpdatePkgPasteServerRequestBody ServerUpdatePkgPasteServerRequestBody
// Example: {"kernelRelease":"kernel release","kernelVersion":"kernel version","osVersion":"20","pkgPasteText":""}
//
// swagger:model ServerUpdatePkgPasteServerRequestBody
type ServerUpdatePkgPasteServerRequestBody struct {

	// Kernel Release
	// Example: kernel release
	KernelRelease string `json:"kernelRelease,omitempty"`

	// Kernel Version
	// Example: kernel version
	KernelVersion string `json:"kernelVersion,omitempty"`

	// Server OS Version
	// Example: 20
	OsVersion string `json:"osVersion,omitempty"`

	// pkg paste text
	// Required: true
	PkgPasteText *string `json:"pkgPasteText"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *ServerUpdatePkgPasteServerRequestBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// Kernel Release
		// Example: kernel release
		KernelRelease string `json:"kernelRelease,omitempty"`

		// Kernel Version
		// Example: kernel version
		KernelVersion string `json:"kernelVersion,omitempty"`

		// Server OS Version
		// Example: 20
		OsVersion string `json:"osVersion,omitempty"`

		// pkg paste text
		// Required: true
		PkgPasteText *string `json:"pkgPasteText"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.KernelRelease = props.KernelRelease
	m.KernelVersion = props.KernelVersion
	m.OsVersion = props.OsVersion
	m.PkgPasteText = props.PkgPasteText
	return nil
}

// Validate validates this server update pkg paste server request body
func (m *ServerUpdatePkgPasteServerRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePkgPasteText(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServerUpdatePkgPasteServerRequestBody) validatePkgPasteText(formats strfmt.Registry) error {

	if err := validate.Required("pkgPasteText", "body", m.PkgPasteText); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this server update pkg paste server request body based on context it is used
func (m *ServerUpdatePkgPasteServerRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServerUpdatePkgPasteServerRequestBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServerUpdatePkgPasteServerRequestBody) UnmarshalBinary(b []byte) error {
	var res ServerUpdatePkgPasteServerRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
