// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/tttfrfr2/goapi2/models"
)

// NewRoleUpdateRoleParams creates a new RoleUpdateRoleParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRoleUpdateRoleParams() *RoleUpdateRoleParams {
	return &RoleUpdateRoleParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRoleUpdateRoleParamsWithTimeout creates a new RoleUpdateRoleParams object
// with the ability to set a timeout on a request.
func NewRoleUpdateRoleParamsWithTimeout(timeout time.Duration) *RoleUpdateRoleParams {
	return &RoleUpdateRoleParams{
		timeout: timeout,
	}
}

// NewRoleUpdateRoleParamsWithContext creates a new RoleUpdateRoleParams object
// with the ability to set a context for a request.
func NewRoleUpdateRoleParamsWithContext(ctx context.Context) *RoleUpdateRoleParams {
	return &RoleUpdateRoleParams{
		Context: ctx,
	}
}

// NewRoleUpdateRoleParamsWithHTTPClient creates a new RoleUpdateRoleParams object
// with the ability to set a custom HTTPClient for a request.
func NewRoleUpdateRoleParamsWithHTTPClient(client *http.Client) *RoleUpdateRoleParams {
	return &RoleUpdateRoleParams{
		HTTPClient: client,
	}
}

/* RoleUpdateRoleParams contains all the parameters to send to the API endpoint
   for the role update role operation.

   Typically these are written to a http.Request.
*/
type RoleUpdateRoleParams struct {

	/* Authorization.

	   api key auth
	*/
	Authorization *string

	// UpdateRoleRequestBody.
	UpdateRoleRequestBody *models.RoleUpdateRoleRequestBody

	/* RoleID.

	   Role ID

	   Format: int64
	*/
	RoleID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the role update role params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RoleUpdateRoleParams) WithDefaults() *RoleUpdateRoleParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the role update role params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RoleUpdateRoleParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the role update role params
func (o *RoleUpdateRoleParams) WithTimeout(timeout time.Duration) *RoleUpdateRoleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the role update role params
func (o *RoleUpdateRoleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the role update role params
func (o *RoleUpdateRoleParams) WithContext(ctx context.Context) *RoleUpdateRoleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the role update role params
func (o *RoleUpdateRoleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the role update role params
func (o *RoleUpdateRoleParams) WithHTTPClient(client *http.Client) *RoleUpdateRoleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the role update role params
func (o *RoleUpdateRoleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the role update role params
func (o *RoleUpdateRoleParams) WithAuthorization(authorization *string) *RoleUpdateRoleParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the role update role params
func (o *RoleUpdateRoleParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithUpdateRoleRequestBody adds the updateRoleRequestBody to the role update role params
func (o *RoleUpdateRoleParams) WithUpdateRoleRequestBody(updateRoleRequestBody *models.RoleUpdateRoleRequestBody) *RoleUpdateRoleParams {
	o.SetUpdateRoleRequestBody(updateRoleRequestBody)
	return o
}

// SetUpdateRoleRequestBody adds the updateRoleRequestBody to the role update role params
func (o *RoleUpdateRoleParams) SetUpdateRoleRequestBody(updateRoleRequestBody *models.RoleUpdateRoleRequestBody) {
	o.UpdateRoleRequestBody = updateRoleRequestBody
}

// WithRoleID adds the roleID to the role update role params
func (o *RoleUpdateRoleParams) WithRoleID(roleID int64) *RoleUpdateRoleParams {
	o.SetRoleID(roleID)
	return o
}

// SetRoleID adds the roleId to the role update role params
func (o *RoleUpdateRoleParams) SetRoleID(roleID int64) {
	o.RoleID = roleID
}

// WriteToRequest writes these params to a swagger request
func (o *RoleUpdateRoleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}
	}
	if o.UpdateRoleRequestBody != nil {
		if err := r.SetBodyParam(o.UpdateRoleRequestBody); err != nil {
			return err
		}
	}

	// path param roleID
	if err := r.SetPathParam("roleID", swag.FormatInt64(o.RoleID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
