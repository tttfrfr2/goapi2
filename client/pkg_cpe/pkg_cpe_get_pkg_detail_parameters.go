// Code generated by go-swagger; DO NOT EDIT.

package pkg_cpe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPkgCpeGetPkgDetailParams creates a new PkgCpeGetPkgDetailParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPkgCpeGetPkgDetailParams() *PkgCpeGetPkgDetailParams {
	return &PkgCpeGetPkgDetailParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPkgCpeGetPkgDetailParamsWithTimeout creates a new PkgCpeGetPkgDetailParams object
// with the ability to set a timeout on a request.
func NewPkgCpeGetPkgDetailParamsWithTimeout(timeout time.Duration) *PkgCpeGetPkgDetailParams {
	return &PkgCpeGetPkgDetailParams{
		timeout: timeout,
	}
}

// NewPkgCpeGetPkgDetailParamsWithContext creates a new PkgCpeGetPkgDetailParams object
// with the ability to set a context for a request.
func NewPkgCpeGetPkgDetailParamsWithContext(ctx context.Context) *PkgCpeGetPkgDetailParams {
	return &PkgCpeGetPkgDetailParams{
		Context: ctx,
	}
}

// NewPkgCpeGetPkgDetailParamsWithHTTPClient creates a new PkgCpeGetPkgDetailParams object
// with the ability to set a custom HTTPClient for a request.
func NewPkgCpeGetPkgDetailParamsWithHTTPClient(client *http.Client) *PkgCpeGetPkgDetailParams {
	return &PkgCpeGetPkgDetailParams{
		HTTPClient: client,
	}
}

/* PkgCpeGetPkgDetailParams contains all the parameters to send to the API endpoint
   for the pkg cpe get pkg detail operation.

   Typically these are written to a http.Request.
*/
type PkgCpeGetPkgDetailParams struct {

	/* Authorization.

	   api key auth
	*/
	Authorization *string

	/* PkgID.

	   PackageID

	   Format: int64
	*/
	PkgID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pkg cpe get pkg detail params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PkgCpeGetPkgDetailParams) WithDefaults() *PkgCpeGetPkgDetailParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pkg cpe get pkg detail params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PkgCpeGetPkgDetailParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) WithTimeout(timeout time.Duration) *PkgCpeGetPkgDetailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) WithContext(ctx context.Context) *PkgCpeGetPkgDetailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) WithHTTPClient(client *http.Client) *PkgCpeGetPkgDetailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) WithAuthorization(authorization *string) *PkgCpeGetPkgDetailParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithPkgID adds the pkgID to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) WithPkgID(pkgID int64) *PkgCpeGetPkgDetailParams {
	o.SetPkgID(pkgID)
	return o
}

// SetPkgID adds the pkgId to the pkg cpe get pkg detail params
func (o *PkgCpeGetPkgDetailParams) SetPkgID(pkgID int64) {
	o.PkgID = pkgID
}

// WriteToRequest writes these params to a swagger request
func (o *PkgCpeGetPkgDetailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}
	}

	// path param pkgID
	if err := r.SetPathParam("pkgID", swag.FormatInt64(o.PkgID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
